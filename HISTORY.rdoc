= RELEASE HISTORY

== 1.3.0 / 2011-05-21

This release greatly simplifes the design of KO. KO now works more like the original
TestUnit in that creating a testcase simply creates a subclass of KO::TestCase. 
Along with this the Context class is little more than a subclass of Module, since
regular module inclusion can now be used to essentially achieve the same result.
Lastly, #setup and #teardown have been deprecated in favor of #before and #after methods.

Changes:

* Add Test module at toplevel to build cases/context.
* Revamp system to use class-based design.
* Revamp Context class as a module.
* Deprecate setup and teardown in favor of before and after.


== 1.2.0 / 2010-12-23

KO! no longer requires an assertion framework. The design has been modified
to fail when a test block returns false or nil, or a custom validation
procedure. This requires the test writer to keep test block small and focused.
In conjunction with this, test nomencalture has been reduced to the basics of 
`case`, `test` and `ok`/`no`. BDD nomenclature is no longer supported (though
a plugin would be easy enough to make if someone prefered it). In addition, all
tests are now run from with a system-based temporary directory (e.g. /tmp/ko).

Changes:

* Removed need for an assertion framework.
* Simplified nomenclature to case/test/ok.
* Run tests from tmpdir.


== 1.1.0 / 2010-08-01

This release adds support for before and after each context advice for 
scenarios. It also adds ae/should nomenclature out-of-the-box.

Changes:

* Add before and after scenario advice to contexts.
* Deprecate #cleanup in favor of #teardown.
* Add #should nomenclature (require 'ae/should').


== 1.0.0 / 2010-07-30

This is the first public release of KO!, a BDD test framework.
KO!, or Knockout, was partially inspired by Shoulda, which served
as a nice and fairly light-weight alternative to RSpec. With
Shoulda's discontinuation, it seemed an oportune time to build a
truely light-weight next-generation BDD system.

Changes:

* Happy Birthday!

